'use strict';(function(){const indexCfg={};indexCfg.doc={id:'id',field:['title','content'],store:['title','href','parent'],};const index=FlexSearch.create(indexCfg);window.geekdocSearchIndex=index;index.add({'id':0,'href':'/ko/eco-system/webserver-express/','title':"webserver-express",'parent':"Eco System",'content':"Installation Npm Install $ npm install --save @naraejs/webserver-express Basic Code import * as naraejs from \u0026#39;@naraejs/core\u0026#39;; import * as webserverExpress from \u0026#39;@naraejs/webserver-express\u0026#39;; naraejs.install(webserverExpress); "});index.add({'id':1,'href':'/ko/eco-system/webserver-serverless/','title':"webserver-serverless",'parent':"Eco System",'content':"Installation Npm Install $ npm install --save @naraejs/webserver-serverless Basic Code import * as naraejs from \u0026#39;@naraejs/core\u0026#39;; import * as webserverExpress from \u0026#39;@naraejs/webserver-express\u0026#39;; import * as webserverServerless from \u0026#39;@naraejs/webserver-serverless\u0026#39;; naraejs.install(webserverExpress); naraejs.install(webserverServerless); /** * YOU MUST CALL createHandler BEFORE narae.js START */ const app = naraejs.create(); const handler = webserverServerless.createHandler(app, webserverServerless.ServerlessPlatform.KUBELESS); app.start(); export { handler }; Supported Serverless Platforms Auto const handler = webserverServerless.createHandler(app, webserverServerless.ServerlessPlatform.AUTO);  AWS Lambda : LAMBDA_TASK_ROOT Environment가 있는지 확인합니다. Kubeless : KUBELESS_INSTALL_VOLUME Environment가 있는지 확인합니다.  Kubeless const handler = webserverServerless.createHandler(app, webserverServerless.ServerlessPlatform.KUBELESS); AWS Lambda NOT TESTED\nconst handler = webserverServerless.createHandler(app, webserverServerless.ServerlessPlatform.AWS_LAMBDA); "});index.add({'id':2,'href':'/ko/learn/','title':"Learn",'parent':"Narae.js",'content':"배우기!\n"});index.add({'id':3,'href':'/ko/eco-system/','title':"Eco System",'parent':"Narae.js",'content':""});index.add({'id':4,'href':'/ko/team/','title':"Team",'parent':"Narae.js",'content':"\r#team_members .item_box {\rmargin-bottom: 16px;\r}\r#team_members .name {\rfont-weight: bold;\r}\r#team_members .second {\rdisplay: flex;\r}\r#team_members .second .icon {\rwidth: 64px;\rheight: 64px;\rborder-radius: 50%;\rbackground: #333;\rtext-align: center;\rline-height: 64px;\rcolor: #fff;\rfont-weight: bold;\rfont-size: 1.6em;\r}\r#team_members .second .details {\r}\r#team_members .second .details table {\rborder: hidden !important;\rmargin: 0 !important;\rmargin-left: 16px !important;\r}\r#team_members .second .details tr {\rborder: hidden !important;\r}\r#team_members .second .details td {\rborder: hidden !important;\rpadding: 0 !important;\r}\r#team_members .second .details a:link { color: inherit !important; text-decoration: none;}\r#team_members .second .details a:visited { color: inherit !important; text-decoration: none;}\r#team_members .second .details a:hover { color: inherit !important; text-decoration: underline;}\r\r\r\r\r\u0026nbsp;\r\r\u0026nbsp;\u0026nbsp;\u0026nbsp;\r\r\r\r\r\r\r\r\r\rvar team_members = new Vue({\rel: '#team_members',\rmethods: {\rlocaledText: function (item) {\rvar out;\rif (typeof item === 'string') {\rreturn item;\r}\rout = item[this.currentLocale];\rif (out) {\rreturn out;\r}\rfor (var i=0; i',\rvalue: \"joseph@jc-lab.net\"\r},\r{\ricon: '',\rvalue: \"Seoul, South Korea\"\r},\r{\ricon: '',\rhtml: \"https://jsty.tistory.com\"\r},\r{\ricon: '',\rhtml: \"jc-lab\"\r}\r]\r}\r]\r}\r})\r\r"});index.add({'id':5,'href':'/ko/support-naraejs/','title':"Narae.js 개발 후원",'parent':"Narae.js",'content':"Narae.js는 Apache 2.0 라이센스 오픈 소스 프로젝트이며 완전 무료입니다. 그러나 프로젝트의 새로운 기능을 유지하고 개발하는데 필요한 노력의 양은 적절한 재정적 지원 없이는 지속 가능하지 않습니다. 다음 방법을 통해 Narae.js 개발을 지원할 수 있습니다.\nOne-time Donations \r.donation_paypal:hover {\rbackground-color: #ddd;\r}\r\r\r"});index.add({'id':6,'href':'/ko/categories/','title':"Categories",'parent':"Narae.js",'content':""});index.add({'id':7,'href':'/ko/categories/EcoSystem/','title':"EcoSystem",'parent':"Categories",'content':""});index.add({'id':8,'href':'/ko/categories/home/','title':"home",'parent':"Categories",'content':""});index.add({'id':9,'href':'/ko/categories/Learn/','title':"Learn",'parent':"Categories",'content':""});index.add({'id':10,'href':'/ko/','title':"Narae.js",'parent':'','content':"narae.js는 node.js 플랫폼에서 제어반전(IoC)를 목적으로 하는 bean.ts 기반의 node.js 오픈소스 프레임워크이다.\n이름 \u0026ldquo;나래\u0026quot;는 \u0026ldquo;날개\u0026quot;를 뜻하는 순 우리말의 문학적 표현이다. 불필요한 개발을 줄여 비즈니스 로직에 더욱 집중할 수 있도록 하여 개발에 날개를 달아 준다.\n특징 의존성 주입 = DI (Dependency Injection)\nbean.ts를 통해 의존성 주입을 지원한다.\n제어반전 = IoC (Inversion of Control)\n아직 완전한 IoC라고 하기엔 부족한 점이 많다.\n기존의 express기반의 소프트웨어에서는 사용자가 직접 router를 구현해 주어야 하며, handler에서 오류 발생시 500에러 등이 발생하지 않고 Response를 주지 못하는 상황 등이 발생하였다. narae.js에서는 사용자가 Router를 생성할 필요 없이 @RequestMapping 어노테이션을 통해 쉽게 handler를 구현할 수 있다. 또한 혹시 모를 오류 발생상황을 위해 handler내에서 발생하는 오류를 catch하여 처리한다.\n라이센스 Apache License 2.0 을 따른다.\n"});index.add({'id':11,'href':'/ko/categories/Support/','title':"Support",'parent':"Categories",'content':""});index.add({'id':12,'href':'/ko/categories/Team/','title':"Team",'parent':"Categories",'content':""});index.add({'id':13,'href':'/ko/tags/','title':"Tags",'parent':"Narae.js",'content':""});})();